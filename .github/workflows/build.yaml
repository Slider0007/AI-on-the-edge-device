name: Build and Pack

on: [push, pull_request]

jobs:
#########################################################################################
## Build Firmware
#########################################################################################
  build:
    runs-on: ubuntu-latest

    steps:
    - id: skip_check
      uses: fkirc/skip-duplicate-actions@v5.3.0
      with:
        concurrent_skipping: same_content_newer
    
    - uses: actions/checkout@v3.5.3
      with:
        submodules: recursive

    - name: Set Variables
      id: vars
      run: |
        echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

    - name: Cache PIP & PlatformIO Files
      uses: actions/cache@v3.3.1
      with:
        path: |
            ~/.cache/pip
            ~/.platformio/.cache
        key: platformio-${{ github.run_id }}
        restore-keys: platformio # This matches above key as it is only used as a prefix. it the restores the nearest cache, see https://github.com/restore-keys:/blob/main/tips-and-workarounds.md#update-a-cache
          
    - name: Cache PIO Build Files
      uses: actions/cache@v3.3.1
      with:
        path: ./code/.pio/
        key: build-${{ github.run_id }}
        restore-keys: build # This matches above key as it is only used as a prefix. it the restores the nearest cache, see https://github.com/restore-keys:/blob/main/tips-and-workarounds.md#update-a-cache
          
    - name: Cache Generated Files
      uses: actions/cache@v3.3.1
      with:
        path: | 
          ./code/sdkconfig.defaults
          ./code/sdkconfig.esp32cam
          ./code/.pio/build/esp32cam/firmware.bin
          ./code/.pio/build/esp32cam/firmware.elf
          ./code/.pio/build/esp32cam/partitions.bin
          ./code/.pio/build/esp32cam/bootloader.bin
          ./html/*
        key: generated-files-${{ github.run_id }}
        restore-keys: generated-files # This matches above key as it is only used as a prefix. it the restores the nearest cache, see https://github.com/restore-keys:/blob/main/tips-and-workarounds.md#update-a-cache          

    - name: Setup Python Environment
      uses: actions/setup-python@v4.6.1
      with:
        python-version: '3.10'

    - name: Install PlatformIO Environment
      run: |
        python -m pip install --upgrade pip
        pip install --upgrade platformio

    - name: Build Firmware
      #run: echo "Testing... ${{ github.ref_name }}, ${{ steps.vars.outputs.sha_short }}" > ./sd-card/html/version.txt; mkdir -p ./code/.pio/build/esp32cam/; cd ./code/.pio/build/esp32cam/; echo "${{ steps.vars.outputs.sha_short }}" > firmware.bin; cp firmware.bin partitions.bin; cp firmware.bin bootloader.bin # Testing
      run: cd code; platformio run --environment esp32cam

    - name: Prepare WebUI (Generate Parameter Tooltips + Update Hashes)
      run: |
        rm -rf ./html
        mkdir html
        cp -r ./sd-card/html/* ./html/

        python -m pip install markdown
        mkdir html/param-tooltips
        cd tools/parameter-tooltip-generator
        bash generate-param-doc-tooltips.sh
        cd ../..

        cp -r ./sd-card/html/* ./html/

        echo "Replacing variables..."
        cd html; find . -type f -exec sed -i 's/$COMMIT_HASH/${{ steps.vars.outputs.sha_short }}/g' {} \;
        


#########################################################################################
## Pack for OTA-Update
# Package to be used with OTA updater on WebUI
#
# Package content:
#  - /firmware.bin
#  - (optional) /html/* (inkl. subfolders)
#  - (optional) /config/*.tflite
#########################################################################################
  pack-for-OTA-update:
    runs-on: ubuntu-latest
    needs: build

    steps:
    - uses: actions/checkout@v3.5.3

    - name: Load generated-files cache
      uses: actions/cache@v3.3.1
      with:
        path: | 
          ./code/sdkconfig.defaults
          ./code/sdkconfig.esp32cam
          ./code/.pio/build/esp32cam/firmware.bin
          ./code/.pio/build/esp32cam/firmware.elf
          ./code/.pio/build/esp32cam/partitions.bin
          ./code/.pio/build/esp32cam/bootloader.bin
          ./html/*
        key: generated-files-${{ github.run_id }}
        restore-keys: generated-files # This matches above key as it is only used as a prefix. it the restores the nearest cache, see https://github.com/restore-keys:/blob/main/tips-and-workarounds.md#update-a-cache

    - if: startsWith(github.ref, 'refs/tags/')
      name: Cache OTA-update Files For Release Creation
      uses: actions/cache@v3.3.1
      with:
        path: update
        key: update_files-${{ github.run_id }}
        restore-keys: update_files # This matches above key as it is only used as a prefix. it the restores the nearest cache, see https://github.com/restore-keys:/blob/main/tips-and-workarounds.md#update-a-cache

    - name: Set Variables
      id: vars
      run: |
        echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
        echo "branch=$(echo ${{ github.ref_name }} | tr / __)" >> $GITHUB_OUTPUT

    - name: Prepare update__*.zip artifact
      run: |
        rm -rf ./update
        mkdir -p ./update
        cp "./code/.pio/build/esp32cam/firmware.bin" "update/firmware.bin"

    - name: Add Web UI to update__*.zip artifact
      run: cp -r ./html ./update/

    - name: Add CNN to update__*.zip artifact
      run: |
        rm -rf ./update/config/
        mkdir -p ./update/config/
        cp ./sd-card/config/*.tfl ./update/config/ 2>/dev/null || true
        cp ./sd-card/config/*.tflite ./update/config/ 2>/dev/null || true

    - name: Upload as update.zip artifact (Firmware + Web UI + CNN)
      uses: actions/upload-artifact@v3.1.2
      with:
        name: "AI-on-the-edge-device__update__${{ steps.vars.outputs.branch }}_(${{ steps.vars.outputs.sha_short }})"
        path: ./update



#########################################################################################
## Pack for Full Setup -> Complete fresh install
# Create a full setup with all binaries and sd-card files to do an full setup by USB
#
# Package content:
#  - /firmware.bin
#  - /partitions.bin
#  - /bootloader.bin   
#  - sd-card.zip (Content for sd-card -> extract to root folder)
#  - /config/*.*
#########################################################################################
  pack-for-manual_setup:
    runs-on: ubuntu-latest
    needs: build

    steps:
    - uses: actions/checkout@v3.5.3

    - name: Load generated-files cache
      uses: actions/cache@v3.3.1
      with:
        path: | 
          ./code/sdkconfig.defaults
          ./code/sdkconfig.esp32cam
          ./code/.pio/build/esp32cam/firmware.bin
          ./code/.pio/build/esp32cam/firmware.elf
          ./code/.pio/build/esp32cam/partitions.bin
          ./code/.pio/build/esp32cam/bootloader.bin
          ./html/*
        key: generated-files-${{ github.run_id }}
        restore-keys: generated-files # This matches above key as it is only used as a prefix. it the restores the nearest cache, see https://github.com/restore-keys:/blob/main/tips-and-workarounds.md#update-a-cache

    - if: startsWith(github.ref, 'refs/tags/')
      name: Cache manual_setup Files For Release Creation
      uses: actions/cache@v3.3.1
      with:
        path: manual_setup
        key: manual_setup-${{ github.run_id }}
        restore-keys: manual_setup # This matches above key as it is only used as a prefix. it the restores the nearest cache, see https://github.com/restore-keys:/blob/main/tips-and-workarounds.md#update-a-cache

    - name: Set Variables
      id: vars
      run: |
        echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
        echo "branch=$(echo ${{ github.ref_name }} | tr / __)" >> $GITHUB_OUTPUT

    - name: Prepare manual_setup__*.zip artifact
      run: |
        rm -rf manual_setup
        mkdir -p manual_setup
        rm -rf manual_setup/*.zip
        rm -rf manual_setup/debug/
        mkdir -p manual_setup/debug/
        # copy builds to manual_setup folder
        cp -f "./code/.pio/build/esp32cam/firmware.bin" "manual_setup/firmware.bin"
        cp -f "./code/.pio/build/esp32cam/bootloader.bin" "manual_setup/bootloader.bin"
        cp -f "./code/.pio/build/esp32cam/partitions.bin" "manual_setup/partitions.bin"
        rm -rf ./sd-card/html
        cp -r ./html ./sd-card/ # Overwrite the Web UI with the preprocessed files
        cd sd-card; zip -r ../manual_setup/sd-card.zip *; cd ..
  
    - name: Upload manual_setup.zip artifact (Firmware + Bootloader + Partitions + Web UI)
      uses: actions/upload-artifact@v3.1.2
      with:
        name: "AI-on-the-edge-device__manual-setup__${{ steps.vars.outputs.branch }}_(${{ steps.vars.outputs.sha_short }})"
        path: ./manual_setup



#########################################################################################
## Pack for initial 2-step setup (remote_setup)
# 1. WebUpdater: Install firmware binary
# 2. ESP Access Point: Install SD-Card content
#
# Package content:
#  - /html/* (inkl. subfolders)
#  - /config/*
#########################################################################################
  pack-for-remote_setup:
    runs-on: ubuntu-latest
    needs: build

    steps:
    - uses: actions/checkout@v3.5.3

    - name: Load generated-files cache
      uses: actions/cache@v3.3.1
      with:
        path: | 
          ./code/sdkconfig.defaults
          ./code/sdkconfig.esp32cam
          ./code/.pio/build/esp32cam/firmware.bin
          ./code/.pio/build/esp32cam/firmware.elf
          ./code/.pio/build/esp32cam/partitions.bin
          ./code/.pio/build/esp32cam/bootloader.bin
          ./html/*
        key: generated-files-${{ github.run_id }}
        restore-keys: generated-files # This matches above key as it is only used as a prefix. it the restores the nearest cache, see https://github.com/restore-keys:/blob/main/tips-and-workarounds.md#update-a-cache
          
    - if: startsWith(github.ref, 'refs/tags/')
      name: Cache remote_setup Files For Release Creation
      uses: actions/cache@v3.3.1
      with:
        path: remote_setup
        key: remote_setup-${{ github.run_id }}
        restore-keys: remote_setup # This matches above key as it is only used as a prefix. it the restores the nearest cache, see https://github.com/restore-keys:/blob/main/tips-and-workarounds.md#update-a-cache

    - name: Set Variables
      id: vars
      run: |
        echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
        echo "branch=$(echo ${{ github.ref_name }} | tr / __)" >> $GITHUB_OUTPUT

    - name: Prepare remote_setup__*.zip artifact
      run: |
        rm -rf ./remote_setup
        mkdir -p ./remote_setup

    - name: Add Web UI to remote_setup
      run: cp -r ./html ./remote_setup/

    - name: Add whole config folder to remote_setup
      run: |
        rm -rf ./remote_setup/config/
        mkdir -p ./remote_setup/config/
        cp ./sd-card/config/* ./remote_setup/config/ 2>/dev/null || true

    - name: Upload remote_setup as remote_setup.zip artifact (Firmware + Web UI + Config)
      uses: actions/upload-artifact@v3.1.2
      with:
        name: "AI-on-the-edge-device__remote-setup__${{ steps.vars.outputs.branch }}_(${{ steps.vars.outputs.sha_short }})"
        path: ./remote_setup



#########################################################################################
## Pack additional files for debugging purpose
#
# Package content:
# - firmware.elf
# - sdkconfig.defaults
# - sdkconfig.esp32cam
#########################################################################################
  pack-for-debugging:
    runs-on: ubuntu-latest
    needs: build

    steps:
    - uses: actions/checkout@v3.5.3

    - name: Load generated-files cache
      uses: actions/cache@v3.3.1
      with:
        path: | 
          ./code/sdkconfig.defaults
          ./code/sdkconfig.esp32cam
          ./code/.pio/build/esp32cam/firmware.bin
          ./code/.pio/build/esp32cam/firmware.elf
          ./code/.pio/build/esp32cam/partitions.bin
          ./code/.pio/build/esp32cam/bootloader.bin
          ./html/*
        key: generated-files-${{ github.run_id }}
        restore-keys: generated-files # This matches above key as it is only used as a prefix. it the restores the nearest cache, see https://github.com/restore-keys:/blob/main/tips-and-workarounds.md#update-a-cache
  
    - if: startsWith(github.ref, 'refs/tags/')
      name: Cache debug-files for release creation
      uses: actions/cache@v3.3.1
      with:
        path: debug
        key: debug_files-${{ github.run_id }}
        restore-keys: debug_files # This matches above key as it is only used as a prefix. it the restores the nearest cache, see https://github.com/restore-keys:/blob/main/tips-and-workarounds.md#update-a-cache
  
    - name: Set Variables
      id: vars
      run: |
        echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
        echo "branch=$(echo ${{ github.ref_name }} | tr / __)" >> $GITHUB_OUTPUT

    - name: Prepare debug-files__*.zip artifact
      run: |
        rm -rf ./debug
        mkdir -p ./debug
        # copy builds to debug folder
        cp -f "./code/sdkconfig.defaults" "debug/sdkconfig.defaults"
        cp -f "./code/sdkconfig.esp32cam" "debug/sdkconfig.esp32cam"
        cp -f "./code/.pio/build/esp32cam/firmware.elf" "debug/firmware.elf"

    - name: Upload debug_files.zip artifact
      uses: actions/upload-artifact@v3.1.2
      with:
        name: "AI-on-the-edge-device__debug-files__${{ steps.vars.outputs.branch }}_(${{ steps.vars.outputs.sha_short }})"
        path: ./debug



#########################################################################################
## Prepare and create release
#########################################################################################
  release: 
    runs-on: ubuntu-latest
    needs: [pack-for-OTA-update, pack-for-manual_setup, pack-for-remote_setup, pack-for-debugging]
    if: startsWith(github.ref, 'refs/tags/') 

    # Sets permissions of the GITHUB_TOKEN to allow updating the branches
    permissions:
      contents: write
      pages: write
      id-token: write

    steps:
    - uses: actions/checkout@v3.53

    - name: Load OTA-update Files
      uses: actions/cache@v3.3.1
      with:
        path: update
        key: update_files-${{ github.run_id }}
        restore-keys: update_files # This matches above key as it is only used as a prefix. it the restores the nearest cache, see https://github.com/restore-keys:/blob/main/tips-and-workarounds.md#update-a-cache
    
    - name: Load manual_setup Files
      uses: actions/cache@v3.2.3
      with:
        path: manual_setup
        key: manual_setup-${{ github.run_id }}
        restore-keys: manual_setup # This matches above key as it is only used as a prefix. it the restores the nearest cache, see https://github.com/restore-keys:/blob/main/tips-and-workarounds.md#update-a-cache

    - name: Load remote_setup Files
      uses: actions/cache@v3.2.3
      with:
        path: remote_setup
        key: remote_setup-${{ github.run_id }}
        restore-keys: remote_setup # This matches above key as it is only used as a prefix. it the restores the nearest cache, see https://github.com/restore-keys:/blob/main/tips-and-workarounds.md#update-a-cache
    
    - name: Load debug_files Files
      uses: actions/cache@v3.3.1
      with:
        path: debug
        key: debug_files-${{ github.run_id }}
        restore-keys: debug_files # This matches above key as it is only used as a prefix. it the restores the nearest cache, see https://github.com/restore-keys:/blob/main/tips-and-workarounds.md#update-a-cache

    - name: Set Variables
      id: vars
      run: |
        echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
        echo "branch=$(echo ${{ github.ref_name }} | tr / __)" >> $GITHUB_OUTPUT

    - name: Prepare artifacts for release
      run: |
        rm -rf release
        mkdir -p release

        # AI-on-the-edge-device__OTA-update__*.zip (e.g. "AI-on-the-edge-device__OTA-update__v16.0.0.zip")
        cd ./update
        zip -r ../release/AI-on-the-edge-device__OTA-update__${{ steps.vars.outputs.branch }}.zip .
        

        # AI-on-the-edge-device__manual-setup__*.zip (e.g. "AI-on-the-edge-device__manual-setup__v16.0.0.zip")
        cd ../manual_setup
        zip -r ../release/AI-on-the-edge-device__manual-setup__${{ steps.vars.outputs.branch }}.zip .


        # AI-on-the-edge-device__remote-setup__*.zip (e.g. "AI-on-the-edge-device__remote-setup__v16.0.0.zip")
        cd ../remote_setup
        zip -r ../release/AI-on-the-edge-device__remote-setup__${{ steps.vars.outputs.branch }}.zip .
        
        
        # AI-on-the-edge-device__debug-files__*.zip (e.g. "AI-on-the-edge-device__debug-files__v16.0.0.zip)"
        cd ../debug
        zip -r ../release/AI-on-the-edge-device__debug-files__${{ steps.vars.outputs.branch }}.zip .

    # extract the version used in next step
    - id: get_version
      if: startsWith(github.ref, 'refs/tags/') 
      uses: Simply007/get-version-action@v2

#    # the changelog [unreleased] will now be changed to the release version
#    - name: Update changelog
#      uses: thomaseizinger/keep-a-changelog-new-release@v1
#      if: startsWith(github.ref, 'refs/tags/') 
#      with:
#        changelogPath: Changelog.md
#        version: ${{ steps.get_version.outputs.version-without-v }}
            
#    # the release notes will be extracted from changelog 
#    - name: Extract release notes
#      id: extract-release-notes
#      if: startsWith(github.ref, 'refs/tags/') 
#      uses: ffurrer2/extract-release-notes@v1
#      with:
#          changelog_file: Changelog.md

    # Releases should only be created on master by tagging the last commit.
    # all artifacts in firmware folder pushed to the release
    - name: Release
      uses: softprops/action-gh-release@v1
      # Note:
      # If you get the error "Resource not accessible by integration",
      # The access rights are not sufficient, see
      # https://github.com/softprops/action-gh-release/issues/232#issuecomment-1131379440
      if: startsWith(github.ref, 'refs/tags/')
      with:
        name:  ${{ steps.get_version.outputs.version-without-v }}
        body: ${{ steps.extract-release-notes.outputs.release_notes }}
        files: |
          release/*

#    # Commit&Push Changelog to master branch. Must be manually merged back to rolling
#    - name: Commit changes and push changes
#      if: startsWith(github.ref, 'refs/tags/') 
#      run: |
#        git config user.name github-actions
#        git config user.email github-actions@github.com
#        git add Changelog.md
#        git commit Changelog.md -m "Update Changelog.md for ${{github.event.inputs.versionIncrement}} release"
#        git push origin HEAD:master
